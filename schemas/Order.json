{
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Order",
  "description": "A simplified Order object used by the ripple-rest API (note that \"orders\" are referred to elsewhere in the Ripple protocol as \"offers\")",
  "type": "object",
  "properties": {
    "account": {
      "description": "Ripple Address of the order's creator",
      "$ref": "RippleAddress"
    },
    "is_buy": {
      "description": "Order is a bid if true, or an ask otherwise",
      "type": "boolean"
    },
    "base_amount": {
      "description": "If the order is a bid, the Amount representing what the order's creator wishes to buy. If the order is an ask, the Amount representing what the order's creator wishes to sell. If an order is partially or fully consumed this value will decrease",
      "$ref": "Amount"
    },
    "counter_amount": {
      "description": "If the order is a bid, the Amount representing what the order's creator wishes to sell. If the order is an ask, the Amount representing what the order's creator wishes to buy. If an order is partially or fully consumed this value will decrease",
      "$ref": "Amount"
    },
    "exchange_rate": {
      "description": "The quantity of the counter currency needed to buy 1 unit of the base currency. This value is fixed when the order is created and will never change, even if the order is partially or fully consumed and rounding error causes this value to not exactly equal the counter_amount divided by the base_amount",
      "$ref": "FloatString"
    },
    "expiration_timestamp": {
      "description": "The timestamp after which the order will no longer be considered active",
      "$ref": "Timestamp"
    },
    "ledger_timeout": {
      "description": "The number of ledgers after the order is initially submitted to ripple-rest after which it will no longer be considered active",
      "type": "string",
      "pattern": "^[0-9]*$"
    },
    "immediate_or_cancel": {
      "description": "Boolean that if set to true indicates this order should only take orders that are available at the time of execution and will not create an entry in the Ripple Ledger",
      "type": "boolean"
    },
    "fill_or_kill": {
      "description": "Boolean that if set to true this order will only take orders that fill the base_amount and are available at the time of execution and will not create an entry in the Ripple Ledger",
      "type": "boolean"
    },
    "maximize_buy_or_sell": {
      "description": "Boolean that if set to true and the order is a bid indicates that the creator wishes to buy up to the base_amount even if the counter_amount is exceeded. If it is true and the order is an ask it indicates the creator wishes to sell up to the counter_amount even if the base_amount is exceeded",
      "type": "boolean"
    },
    "cancel_replace": {
      "description": " The sequence number of an outstanding order that should be cancelled and replaced by this one",
      "type": "string",
      "pattern": "^d*$"
    },
    "sequence": {
      "description": "The sequence number of the order on the creator's account. All orders can be uniquely identified by the address of the creator and their sequence number",
      "type": "string",
      "pattern": "^[0-9]*$"
    },
    "state": {
      "description": "Possible values are \"active\", \"partially_filled\", \"filled\", \"cancelled\", \"expired\", \"failed\"",
      "type": "string",
      "pattern": "^active|partially_filled|filled|cancelled|expired|failed$"
    },
    "ledger": {
      "description": "If the order is returned from a historical query, the last ledger sequence when the order was modified",
      "type": "string",
      "pattern": "^[0-9]+$"
    },
    "hash": {
      "description": "If the order is returned from a historical query, the hash of the last transaction that modified the order",
      "$ref": "Hash256"
    },
    "previous_hash": {
      "description": "If the order is returned from a historical query, the hash of the previous transaction that modified the order",
      "$ref": "Hash256"
    }
  },
  "required": ["account", "is_buy"]
}